name: Build and Deploy with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:


jobs:
  get-changed-packages:
    runs-on: ubuntu-latest
    outputs:
      changed-packages: ${{ steps.filter-paths.outputs.changes }}

    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter-paths
        with:
          filters: |
            common: &common
              - ./.github/workflows/main.yml
            "Base Content Package":
              - *common
              - ./Base\ Content\ Package/**
            Akram:
              - *common
              - ./Akram/**
            Libikisi:
              - *common
              - ./Libikisi/**

  list-changed-packages:
    needs: get-changed-packages
    runs-on: ubuntu-latest
    env:
      GH_EVENT_NAME: ${{ github.event_name }}
    outputs:
      changed-packages: ${{ steps.detect-changes.outputs.changed-packages }}
    steps:
      - id: detect-changes
        run: |
          case $GH_EVENT_NAME in
            workflow_dispatch)
              echo "changed-packages=${{ toJSON('["Base Content Package", Akram, Libikisi]') }}" >> $GITHUB_OUTPUT
              ;;
            workflow_call)
              echo "changed-packages=${{ toJSON('["Base Content Package", Akram, Libikisi]') }}" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "changed-packages=${{ toJSON(needs.get-changed-packages.outputs.changed-packages) }}" >> $GITHUB_OUTPUT
              ;;
          esac

  build:
    needs: [ get-changed-packages, list-changed-packages ]
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        java-version: [ 8 ]
        working-directory: ${{ fromJSON(needs.list-changed-packages.outputs.changed-packages) }}
        exclude:
          - working-directory: common

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          cache: maven
          server-id: path-drc
          server-username: path-drc-bot
          server-password: MAVEN_TOKEN
      - name: Build with Maven
        id: build_with_maven
        run: |
          mvn clean package --batch-mode --file pom.xml
        working-directory: ${{ matrix.working-directory }}

  deploy:
    if: ${{ contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name) }}
    needs: [ get-changed-packages, list-changed-packages, build ]

    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        java-version: [ 8 ]
        working-directory: ${{ fromJSON(needs.list-changed-packages.outputs.changed-packages) }}
        exclude:
          - working-directory: common

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          cache: maven
          server-id: path-drc
          server-username: path-drc-bot
          server-password: MAVEN_TOKEN
      - name: Build with Maven
        id: build_with_maven
        run: |
          mvn deploy --batch-mode --file pom.xml
        working-directory: ${{ matrix.working-directory }}
        env:
          MAVEN_TOKEN: ${{ secrets.PATH_DRC_TOKEN }}
